window.advcake_attempt = window.advcake_attempt || 0;
try {

var advcake_helper = {
    uid: function () {
        return Math.random().toString(36).slice(2);
    },
    guid: function () {
        function s4() {
            return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);
        }
        return s4() + s4() + "-" + s4() + "-" + s4() + "-" + s4() + "-" + s4() + s4() + s4();
    },
    get_q: function (e) {
        var t = window.location.search;
        return t = t.match(new RegExp(e + "=([^&=]+)")), t ? t[1] : "";
    },
    queryBuilder: function (data) {
        var query = [];
        for (var key in data) {
            query.push(key + '=' + data[key]);
        }
        return query.join('&');
    },
    getUrlElement: function (url) {
        var a = document.createElement('a');
        a.href = url;
        return a;
    },
    setCookie: function (e, t, n) {
        n = n || {};
        var o = n.expires;
        n.SameSite = 'None';
        n.Secure = true;
        if ("number" === typeof o && o) {
            var r = new Date;
            r.setTime(r.getTime() + 1000 * o), o = n.expires = r;
        }
        o && o.toUTCString && (n.expires = o.toUTCString()), t = encodeURIComponent(t);
        var i = e + "=" + t;
        for (var a in n) {
            i += "; " + a;
            var c = n[a];
            c !== !0 && (i += "=" + c);
        }
        document.cookie = i;
    },
    getCookie: function (e) {
        var t = document.cookie.match(new RegExp("(?:^|; )" + e.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") + "=([^;]*)"));
        return t ? decodeURIComponent(t[1]) : void 0;
    },
    getDate: function() {
        var date = new Date();
        return date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2) + ' ' + ('0' + (date.getHours())).slice(-2) + ':' + ('0' + (date.getMinutes())).slice(-2) + ':' + ('0' + (date.getSeconds())).slice(-2);
    },
    cleanString: function (string) {
        if (string === undefined || string === null) {
            return '';
        }
        string = string.replace(/['"]/g, '');
        return string.replace(/&quot;/g, '');
    },
    post: function(url, data) {
        var async = true;
        var method = 'POST';
        var XHR = ("onload" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;
        var xhr = new XHR();

        var body = data;
        var multipart = false;

        if (typeof data === 'object') {
            var boundary = String(Math.random()).slice(2);
            var boundaryMiddle = '--' + boundary + '\r\n';
            var boundaryLast = '--' + boundary + '--\r\n';

            var bodyParts = ['\r\n'];
            for (var key in data) {
                if (!data.hasOwnProperty(key)) continue;
                bodyParts.push('Content-Disposition: form-data; name="' + key + '"\r\n\r\n' + data[key] + '\r\n');
            }
            multipart = true;
            body = bodyParts.join(boundaryMiddle) + boundaryLast;
        }

        if ("withCredentials" in xhr) {
            try {
                xhr.open(method, url, async);
                if (multipart) {
                    xhr.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + boundary);
                }
            } catch (x) {
                return false;
            }
            xhr.send(body);
            xhr.onreadystatechange = function () {
                return 4 === xhr.readyState;
            };
        }
    },
    get: function (url, data) {
        var async = true;
        var method = 'GET';
        var xhr = new XMLHttpRequest();
        if ("withCredentials" in xhr) {
            try {
                xhr.open(method, url + '?' + advcake_helper.queryBuilder(data), async);
            } catch (x) {
                return false;
            }
            xhr.send();
            xhr.onreadystatechange = function () {
                return 4 === xhr.readyState;
            };
        }
    },
    pixel: function (url, data) {
        (new Image()).src = url + '?' + advcake_helper.queryBuilder(data);
    }
};

var advcake_int = {
    domain: ".mi-shop.com",

    hitUrl: "https://hit.acstat.com/xiaomi/",
    postbackUrl: 'https://api.ekacvda.com/postback/xiaomi',

    utm_source: "utm_source",
    utm_partner: "utm_campaign",
    utm_webmaster: "utm_content",
    utm_params: "advcake_params",

    cookie_partner: "advcake_utm_partner",
    cookie_webmaster: "advcake_utm_webmaster",
    cookie_params: "advcake_click_id",

    cookie_session_id: "advcake_session_id",
    cookie_track_id: "advcake_trackid",
    cookie_track_url: "advcake_track_url",
    cookie_lifetime: 2592000,

    vars: {
        page_hash: ''
    },

    init: function () {

                advcake_int.checkDomain();
        
        advcake_int.setPageHash();

                advcake_int.setTrackId();
        
        advcake_int.setSessionId();

        if (advcake_int.checkCommon()) {
            advcake_int.setTrackUrl();
            advcake_int.setPartner();
            advcake_int.setWebmaster();
            advcake_int.setClickId();
        }
    },

    checkDomain: function() {
        if (window.advcake_attempt < 5 && location.host && location.host.indexOf(advcake_int.domain.substring(1)) === -1) {
            window.advcake_attempt++;
            throw 'incorrect_domain';
        }
    },

    checkCommon: function () {
                    return advcake_helper.get_q(advcake_int.utm_source) !== "" || advcake_helper.get_q('gclid') || advcake_helper.get_q('yclid');
            },

    checkCake: function () {
                    return advcake_helper.get_q(advcake_int.utm_source) === 'advcake' || advcake_helper.get_q('advcake');
            },

    setPageHash: function () {
        advcake_int.vars.page_hash = advcake_helper.uid();
    },

    setSessionId: function () {
        if (advcake_int.getSessionId() === undefined) {
            advcake_helper.setCookie(advcake_int.cookie_session_id, advcake_helper.guid(), {
                expires: advcake_int.cookie_lifetime,
                domain: advcake_int.domain,
                path: "/"
            });
        }
    },
    getSessionId: function () {
        return advcake_helper.getCookie(advcake_int.cookie_session_id);
    },


    setTrackId: function () {
        if (advcake_int.checkCommon() || advcake_int.getTrackId() === '') {
            advcake_helper.setCookie(advcake_int.cookie_track_id, advcake_helper.guid(), {
                expires: advcake_int.cookie_lifetime,
                domain: advcake_int.domain,
                path: "/"
            });
        }
    },
    getTrackId: function () {
                    return advcake_helper.getCookie(advcake_int.cookie_track_id) || '';
            },


    setWebmaster: function () {
        advcake_helper.setCookie(advcake_int.cookie_webmaster, advcake_int.parseWebmaster(), {
            expires: advcake_int.cookie_lifetime,
            domain: advcake_int.domain,
            path: "/"
        });
    },
    getWebmaster: function () {
        return advcake_helper.getCookie(advcake_int.cookie_webmaster) || '';
    },
    parseWebmaster: function () {
                    return advcake_helper.get_q(advcake_int.utm_webmaster);
            },


    setPartner: function () {
        advcake_helper.setCookie(advcake_int.cookie_partner, advcake_int.parsePartner(), {
            expires: advcake_int.cookie_lifetime,
            domain: advcake_int.domain,
            path: "/"
        });
    },
    getPartner: function () {
        return advcake_helper.getCookie(advcake_int.cookie_partner) || '';
    },
    parsePartner: function () {
                    return advcake_helper.get_q(advcake_int.utm_partner);
            },


    setClickId: function () {
        advcake_helper.setCookie(advcake_int.cookie_params, advcake_int.parseClickId(), {
            expires: advcake_int.cookie_lifetime,
            domain: advcake_int.domain,
            path: "/"
        });
    },
    getClickId: function () {
        return advcake_helper.getCookie(advcake_int.cookie_params) || '';
    },
    parseClickId: function () {
                    return advcake_helper.get_q(advcake_int.utm_params);
            },


    setTrackUrl: function () {
        advcake_helper.setCookie(advcake_int.cookie_track_url, location.href, {
            expires: advcake_int.cookie_lifetime,
            domain: advcake_int.domain,
            path: "/"
        });
    },
    getTrackUrl: function (encode) {
        encode = encode || true;
        var url = advcake_helper.getCookie(advcake_int.cookie_track_url) || '';
        return encode ? encodeURIComponent(url) : url;
    },


    getQuerySource: function () {
                return advcake_helper.get_q(advcake_int.utm_source);
            },
    getQueryMedium: function () {
        return advcake_helper.get_q("utm_medium");
    },
    getReferrer: function (encode) {
        encode = encode || true;
        return encode ? encodeURIComponent(document.referrer) : document.referrer;
    },
    isIframe: function () {
        return window !== window.top ? 1 : 0;
    },
    getIframeLand: function (encode) {
        encode = encode || true;
        var iframe_land = '';
        try {
            if (advcake_int.isIframe()) { iframe_land = window.top.location.href; }
        } catch (e) {}
        return encode ? encodeURIComponent(iframe_land) : iframe_land;
    },
    getLand: function (encode) {
        encode = encode || true;
        return encode ? encodeURIComponent(location.href) : location.href;
    },

    sendHit: function () {
        advcake_helper.pixel(advcake_int.hitUrl, {
            "sid": advcake_int.getSessionId(),
            "t_tid": advcake_int.getTrackId(),
            "t_dp": advcake_int.getClickId(),
            "wid": advcake_int.getWebmaster(),
            "par": advcake_int.getPartner(),
            "ref": advcake_int.getReferrer().substr(0, 1350),
            "t_t": advcake_int.getQueryMedium(),
            "t_if": advcake_int.isIframe(),
            "t_s": advcake_int.getQuerySource(),
            "if_p": advcake_int.getIframeLand(),
            "ih": innerHeight,
            "iw": innerWidth,
            "s_w": screen.width,
            "s_h": screen.height,
            "land": advcake_int.getLand().substr(0, 1350)
        });
    }
};

advcake_int.init();
advcake_int.sendHit();


window.advcakeCorrection = function (data) {
    
if (typeof data !== 'undefined' && typeof data.pageType !== 'undefined') {
    data.pageType = parseInt(data.pageType);
    data.user = data.user || {};
    data.user.type = data.user.type || '';
    data.user.email = data.user.email || '';
    switch (data.pageType) {
        case 1:
            break;
        case 2:
            data.currentCategory = data.currentCategory || {};
            break;
        case 3:
            data.products = data.products || [];
            data.currentCategory = data.currentCategory || {};
            break;
        case 4:
            data.basketProducts = data.basketProducts || [];
            break;
        case 5:
            data.basketProducts = data.basketProducts || [];
            break;
        case 6:
            data.orderInfo = data.orderInfo || {};
            data.orderInfo.coupon = data.orderInfo.coupon || '';
            data.orderInfo.totalPrice = data.orderInfo.totalPrice || 0;
            data.basketProducts = data.basketProducts || [];
            break;
        case 7:
            data.products = data.products || [];
            data.basketProducts = data.basketProducts || [];
            break;
    }
}

    return data;
};

window.advcakeRetarget = function (data) {
    // cityads
try {
    switch (parseInt(data.pageType)) {
        case 2: //Product Page
            window.xcnt_product_id = data.currentProduct.id;
            break;
        case 4: //Basket Page
            window.xcnt_basket_products = data.basketProducts.map(function (prd) { return prd.id; }).join(',');
            window.xcnt_basket_quantity = data.basketProducts.map(function (prd) { return parseInt(prd.quantity); }).join(',');
            break;
        case 6: //Thanks for order
            window.xcnt_order_products = data.basketProducts.map(function (prd) { return prd.id; }).join(',');
            window.xcnt_order_quantity = data.basketProducts.map(function (prd) { return parseInt(prd.quantity); }).join(',');
            window.xcnt_order_id = data.orderInfo.id;
            window.xcnt_order_total = data.orderInfo.totalPrice;
            window.xcnt_order_currency = 'RUR';
            window.xcnt_user_email = data.user.email;
            break;
        default: // nothing
            break;
    }
    (function (d) {
        var xscr = d.createElement('script');
        xscr.async = 1;
        xscr.src = '//x.cnt.my/async/track/?r=' + Math.random();
        var x = document.getElementsByTagName("script")[0];
        x.parentNode.insertBefore(xscr, x);
    })(document);
} catch (e) {}

// blue
try {
(function (data) {
    if (!window.advcakeRetarget_getblue_load_flag) {
        clearTimeout(window.advcakeRetarget_getblue_load_timeout);
        window.advcakeRetarget_getblue_load_timeout = setTimeout(function () {
            window.advcakeRetarget_getblue_load_flag = true;
            var s = document.createElement('script');
            s.setAttribute('src', 'https://event.getblue.io/js/blue-tag.min.js');
            s.setAttribute('async', 'true');
            s.setAttribute('type', 'text/javascript');
            document.body.appendChild(s);
        }, 0);
    } else {
        console.warn("GetBlue doesn't support sending push data multiple times on the same page. Ignored.", data);
        return;
    }

    window.blue_q = window.blue_q || [];

    var basket = [];
    if (data.basketProducts) {
        basket = data.basketProducts.map(function (item) {
            return item.id;
        });
    }

    switch (parseInt(data.pageType)) {
        case 2: // Product Page
            window.blue_q.push(
                {event: "setCampaignId", value: "DF5CEDFD-F07B-EFDA-817AA2FAF1C6F7EB"},
                {event: "setProductId", value: data.currentProduct.id},
                {event: "setPageType", value: "product"}
            );
            break;
        case 4: // Basket Page
            window.blue_q.push(
                {event: "setCampaignId", value: "DF5CEDFD-F07B-EFDA-817AA2FAF1C6F7EB"},
                {event: "setProductId", value: basket},
                {event: "setPageType", value: "basket"}
            );
            break;
        case 6: // Thanks for order
            window.blue_q.push(
                {event: "setCampaignId", value: "DF5CEDFD-F07B-EFDA-817AA2FAF1C6F7EB"},
                {event: "setProductId", value: basket},
                {event: "setTransactionTotal", value: data.orderInfo.totalPrice},
                {event: "setTransactionId", value: data.orderInfo.id},
                {event: "setPageType", value: "conversion"}
            );
            break;
        default: // Nothing
            window.blue_q.push(
                {event: "setCampaignId", value: "DF5CEDFD-F07B-EFDA-817AA2FAF1C6F7EB"},
                {event: "setPageType", value: "visit"}
            );
            break;
    }
}(data));
} catch (e) {}


// indoleads
(function(){
    var s = document.createElement("script");
    s.async = true;
    s.src = (document.location.protocol === "https:" ? "https:" : "http:") + "//static.indoleads.com/js/platform/container_v2.min.js";
    var a = document.getElementsByTagName("script")[0];
    a.parentNode.insertBefore(s, a);

    window.INDOLEADS_LIB = window.INDOLEADS_LIB || [];
    window.INDOLEADS_LIB.push({
        offer_id: 7687,
        network: "https://static.indoleads.com"
    });
})();

// adspartners
try {
    switch (parseInt(data.pageType)) {
        case 1: //main
            window.APRT_DATA = {pageType: 1};
            break;
        case 2: //Product Page
            window.APRT_DATA = {pageType: 2, currentProduct: data.currentProduct, currentCategory: data.currentCategory};
            break;
        case 3: //Catalog Page
            window.APRT_DATA = {pageType: 3, currentCategory: data.currentCategory};
            break;
        case 4: //Basket Page
            window.APRT_DATA = {pageType: 4, basketProducts: data.basketProducts};
            break;
        case 5: //Order Page
            window.APRT_DATA = {pageType: 5, basketProducts: data.basketProducts};
            break;
        case 6: //Thanks for order
            window.APRT_DATA = {pageType: 6, purchasedProducts: data.basketProducts, orderInfo: data.orderInfo};
            break;
        default: // nothing
            window.APRT_DATA = {pageType: 0};
            break;
    }
    (function (w, d) {
        try {
            var el = 'getElementsByTagName', rs = 'readyState';
            if (d[rs] !== 'interactive' && d[rs] !== 'complete') {
                var c = arguments.callee;
                return setTimeout(function () {
                    c(w, d)
                }, 100);
            }
            var s = d.createElement('script');
            s.type = 'text/javascript';
            s.async = s.defer = true;
            s.src = '//dmrtx.com/code/mi-shop/';
            var p = d[el]('body')[0] || d[el]('head')[0];
            if (p) p.appendChild(s);
        } catch (x) {
            if (w.console) w.console.log(x);
        }
    })(window, document);
} catch (e) {}

};

window.advcakeOrder = function (data) {
    
try {
    if (parseInt(data.pageType) === 6) {
        data.basketProducts.forEach(function (item) {
            item.name = advcake_helper.cleanString(item.name);
        });
        var order = {
            id: data.orderInfo.id,
            totalPrice: data.orderInfo.totalPrice,
            coupon: data.orderInfo.coupon,
            trackId: advcake_int.getTrackId(),
            url: advcake_int.getTrackUrl(),
            localTime: advcake_helper.getDate(),
            clientType: data.user.type,
            email: data.user.email,
            basketProducts: JSON.stringify(data.basketProducts),
            dataAdvcake: JSON.stringify(data)
        };

        if (data.orderInfo.hasOwnProperty('tax')) {
            order.tax = data.orderInfo.tax;
        }
        if (data.orderInfo.hasOwnProperty('shipping')) {
            order.shipping = data.orderInfo.shipping;
        }

        advcake_helper.post(advcake_int.postbackUrl, order);
    }
} catch (e) {
}
};


window.advcakeEvents = function (data) {
    if (!data || typeof data !== 'object' || Array.isArray(data)) {
        return;
    }

    if (typeof window.advcakeCorrection === "function") {
        data = window.advcakeCorrection(data);
    }
    if (typeof data !== 'undefined') {
                if (typeof window.advcakeOrder === "function") {
            window.advcakeOrder(data);
        }
        
                if (typeof window.advcakeRetarget === "function") {
            window.advcakeRetarget(data);
        }
            }
};

window.advcake_data = window.advcake_data || [];


if (window.advcake_data_push_flag !== true) {
    window.advcake_data_push_flag = true;
    var cakePush = window.advcake_data.push;
    window.advcake_data.push = function (data) {
        var a = cakePush.apply(this, arguments);
        window.advcakeEvents(data);
        return a;
    };
}

if (typeof window.advcake_data === 'object' && typeof window.advcake_data.forEach !== 'undefined') {
    window.advcake_data.forEach(function (data) {
        if (typeof data === 'object') {
            window.advcakeEvents(data);
        }
    });
}

// indoleads
(function(){
    var s = document.createElement("script");
    s.async = true;
    s.src = (document.location.protocol === "https:" ? "https:" : "http:") + "//static.indoleads.com/js/platform/container_v2.min.js";
    var a = document.getElementsByTagName("script")[0];
    a.parentNode.insertBefore(s, a);

    window.INDOLEADS_LIB = window.INDOLEADS_LIB || [];
    window.INDOLEADS_LIB.push({
        offer_id: 7687,
        network: "https://static.indoleads.com"
    });
})();

} catch (e) {
    if (e === 'incorrect_domain') {
        (function ( a ) {
            var b = a.createElement("script");
            b.async = 1;
            b.src = "//code.cake026.ru/?r=" + Math.random();
            a=a.getElementsByTagName("script")[0];
            a.parentNode.insertBefore(b,a)
        })(document);
    }
}
